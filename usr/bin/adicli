#!/bin/bash

# ==============================================================================
#
# Author: Marcelo Barreto Nees <marcelo.linux@gmail.com>
#
# ==============================================================================

conf_header=/usr/share/adicli/base/header
conf_db_engine=/usr/share/adicli/base/db_engine

if [ ! -e $conf_header ] || [ ! -e $conf_db_engine ] ; then

  echo "$0: Error - Some framework files not found found."
  exit 1

fi

source $conf_header


# ==============================================================================
#
# Executa as queries, altera o template selecionado e retorna na tela
#
# ==============================================================================
function generate() {

  source $conf_db_engine

  # unix timestamp
  timestamp=$(date +"%s")

  # PID
  export pid="${timestamp}.$$"

  # Create temporary dir
  mkdir -p "/tmp/adicli/$pid"

  # Default values for some vars
  STRATEGY=${STRATEGY:-max}
  AUTHOR=${AUTHOR:-Authors\'s Full Name <mail@domain>}
  PARENT_CLASS=${PARENT_CLASS:-TPage}
  LIMIT=${LIMIT:-10}

  # Generate Models, Forms, Lists etc..
  # ==============================================================================
  function read_fields() {

    echo "" >> "/tmp/adicli/$pid/FORM_FIELDS_Objects.txt"
    echo "" >> "/tmp/adicli/$pid/FORM_FIELDS_Fields.txt"
    echo "" >> "/tmp/adicli/$pid/LIST_COLUMNS_Objects.txt"
    echo "" >> "/tmp/adicli/$pid/LIST_COLUMNS_Fields.txt"
    echo "" >> "/tmp/adicli/$pid/FILTER_FIELDS.txt"
    echo "" >> "/tmp/adicli/$pid/DINAMIC_CODE.txt"

    #echo "$db_command"|$db_connector|grep -E -v '^( |$|CONSTRAINT)'|awk '{print $1,$2}'|while read field type; do
    echo "$db_command"|$db_connector|grep -E -v '^($|CONSTRAINT)'|sed -e 's/|/ /g'|awk '{print $1, $2}'|while read field type; do
    
    
      type=$(echo "$type"|sed -e 's/(.*//g;')

      case $type in
        varchar)
          type_adianti="TEntry";
          ;;
      
        datetime|timestamp)
          type_adianti="TDate";
        ;;
      
        *)
          type_adianti="TEntry";
          ;;
      esac
    
      # FORM_FIELDS_{Objects,Fields}
      echo "{TAB}{TAB} \$$field = new $type_adianti('$field');{NEWLINE}"                             >> "/tmp/adicli/$pid/FORM_FIELDS_Objects.txt"
      echo "{TAB}{TAB} \$this->form->addFields( [ new TLabel('$field')] , [ \$$field ] );{NEWLINE}"  >> "/tmp/adicli/$pid/FORM_FIELDS_Fields.txt"

      # LIST_COLUMNS_{Objects,Fields}    
      echo "{TAB}{TAB} \$column_$field = new TDataGridColumn('$field', '$field', 'left');{NEWLINE}"  >> "/tmp/adicli/$pid/LIST_COLUMNS_Objects.txt"
      echo "{TAB}{TAB} \$this->datagrid->addColumn(\$column_$field);{NEWLINE}"     		               >> "/tmp/adicli/$pid/LIST_COLUMNS_Fields.txt"

      # FILTER_FIELDS
      echo "{TAB}{TAB} \$this->addFilterField('$field', '=', '$field');{NEWLINE}"                    >> "/tmp/adicli/$pid/FILTER_FIELDS.txt"

      field=$(echo "$field"|sed -e 's/(.*//g; s/ .*//g')
      if [ "X$field" != "X" ] ; then
        echo "{TAB}{TAB} parent::addAttribute('$field');"                      			                 >> "/tmp/adicli/$pid/DINAMIC_CODE.txt"
      fi
    
    done

  }

  # DINAMIC_CODE
  # ==============================================================================
  function DINAMIC_CODE() {
    
    echo "{NEWLINE}{TAB} /\*\*{NEWLINE}"
    echo "{TAB} \* Constructor method{NEWLINE}"
    echo "{TAB} \*/{NEWLINE}"
    echo "{TAB}public function __construct(\$$PRIMARYKEY = NULL, \$callObjectLoad = TRUE){NEWLINE}"
    echo "{TAB}{{NEWLINE}"
    echo "{TAB}{TAB}parent::__construct(\$$PRIMARYKEY, \$callObjectLoad);{NEWLINE}"
    cat "/tmp/adicli/$pid/DINAMIC_CODE.txt"
    echo "{NEWLINE}"
    echo "{TAB}}"
    echo "{NEWLINE}"
  }


  # FORM_FIELDS
  # ==============================================================================
  function FORM_FIELDS() {
    echo "{NEWLINE}"
    echo "{TAB}{TAB} // create the form fields"
    echo "{NEWLINE}"
    cat "/tmp/adicli/$pid/FORM_FIELDS_Objects.txt"
    echo "{NEWLINE}"

    echo "{NEWLINE}"
    echo "{TAB}{TAB} // add the fields"
    echo "{NEWLINE}"
    cat "/tmp/adicli/$pid/FORM_FIELDS_Fields.txt" 
    echo "{NEWLINE}"
  }


  # LIST_COLUMNS
  # ==============================================================================
  function LIST_COLUMNS () {
    echo "{NEWLINE}"
    echo "{TAB}{TAB} // creates the datagrid columns"
    echo "{NEWLINE}"
    cat "/tmp/adicli/$pid/LIST_COLUMNS_Objects.txt"
    echo "{NEWLINE}"

    echo "{NEWLINE}"
    echo "{TAB}{TAB} // add the columns to the DataGrid"
    echo "{NEWLINE}"
    cat "/tmp/adicli/$pid/LIST_COLUMNS_Fields.txt"
    echo "{NEWLINE}"
  }


  # FILTER_FIELDS
  # ==============================================================================
  function FILTER_FIELDS() {
    echo "{NEWLINE}"
    echo "{TAB}{TAB} // add the filter fields ('filterField', 'operator', 'formField')"
    echo "{NEWLINE}"
    cat "/tmp/adicli/$pid/FILTER_FIELDS.txt"
    echo "{NEWLINE}"
  }


  # Read the table for fields and types
  # ==============================================================================
  read_fields


  # Substitute MASKS on the template
  # ==============================================================================
  #s|parent::|      parent::|g;
  #s|; parent::|;\n      parent::|g;
  #s|; /|;\n|g;
  #s|^[$]|\n        $|g;
  sed -e "
    s|{AUTHOR}|${AUTHOR}|g;
    s|{TABLENAME}|${TABLENAME}|g;
    s|{PRIMARYKEY}|${PRIMARYKEY}|g;
    s|{PRIMARY_KEY}|${PRIMARYKEY}|g;
    s|{STRATEGY}|${STRATEGY}|g;
    s|{DINAMIC_CODE}|$(echo -n `DINAMIC_CODE`)|g;
    s|{CLASS}|${CLASS}|g;
    s|{ACTIVE_RECORD}|${ACTIVE_RECORD}|g;
    s|{DATABASE}|${DATABASE}|g;
    s|{PARENT_CLASS}|${PARENT_CLASS}|g;
    s|##INIT_METHODS##|${INIT_METHODS}|g;
    s|##FORM_SETUP##|${FORM_SETUP}|g;
    s|##FORM_FIELDS##|$(echo -n `FORM_FIELDS`)|g;
    s|##FILTER_FIELDS##|$(echo -n `FILTER_FIELDS`)|g;
    s|##LIST_COLUMNS##|$(echo -n `LIST_COLUMNS`)|g;
    s|<your name here>|${AUTHOR}|g;
    s|{TAB}|   |g;
    s|{LIMIT}|${LIMIT}|g;
    s|{EDIT_ACTION}|${EDIT_ACTION}|g;
    s|{NEWLINE}|\n|g;
    s| parent::|\n        parent::|g; 
    " "$TEMPLATE"

}


##INIT_METHODS##
##FORM_SETUP##

# ==============================================================================
# TODO
# ==============================================================================
##DATA##
##DETAIL_FIELD[0]##
##DETAIL_FIELD[1]##
##DETAIL_FIELD[2]##
##DETAIL_FIELD[3]##
##DETAIL_FIELD[4]##
##DETAIL_FIELD[5]##
##DETAIL_FIELD[7]##
##DETAIL_FIELD[8]##
##FILTER_FIELDS## <- OK
##FILTERS##
##FILTER_SEARCHS##
##FORM_FIELD[0]##
##FORM_FIELD[1]##
##FORM_FIELD[2]##
##FORM_FIELD[3]##
##FORM_FIELD[4]##
##FORM_FIELD[5]##
##FORM_FIELD[6]##
##FORM_FIELDS## <- OK
##FORM_SETUP##
##INIT_METHODS##
##LIST_COLUMNS## <- OK
##MASTER_FIELD[0]##
##MASTER_FIELD[1]##
##MASTER_FIELD[2]##
##METHODS##
##QUERY_FIELD[0]##
##QUERY_FIELD[1]##
##QUERY_FILTER[0]##
##QUERY_FILTER[1]##
##QUERY_FILTER[2]##
##QUERY_FILTER[3]##
##RESULT_FIELDS##
##SESSION_FILTERS##
##STYLES##
##TITLES##
# ==============================================================================


# Show tables
# ==============================================================================
function show_tables() {

  source $conf_file || { 
    echo "conf_file ($conf_file) not found."
    exit 4
  }

  source $conf_db_engine || {
    echo "conf_db_engine ($conf__db_engine) not found."
    exit 5    
  }

  # show tables
  echo "$show_tables"|$db_connector

}

# Show Templates
# ==============================================================================
function show_templates() {
  cd /usr/share/adicli/framework/templates/ || exit
  find /usr/share/adicli/framework/templates|grep .php$
  echo
  exit 1
}


# Show Examples
# ==============================================================================
function show_examples() {
cat <<EOF
How to Use
==========

Create a Customers Model
========================

  adicli -c /etc/adicli/databases/mysql.conf  \\
         -T /usr/share/adicli/framework/templates/model/Model.php \\
         -A "Full Name <your_email@domain" \\
         -t customers \\
         -M Customers \\
         -C Customers > Customers.class.php


Create a Customers Form
========================

  adicli -c /etc/adicli/databases/mysql.conf  \\
         -T /usr/share/adicli/framework/templates/form/StandardForm.php \\
         -A "Full Name <your_email@domain" \\
         -t customers \\
         -M Customers \\
         -C CustomersForm > CustomersForm.class.php


Create a Customers List
========================

  adicli -c /etc/adicli/databases/mysql.conf  \\
         -T /usr/share/adicli/framework/templates/list/StandardList.php \\
         -A "Full Name <your_email@domain" \\
         -t customers \\
         -M Customers \\
         -C CustomersList > CustomersList.class.php

EOF
}




# List Options or Generate the Class
# ==============================================================================
case $option in
  "templates")
    show_templates
    exit
    ;;

  "examples")
    show_examples
    exit
    ;;

  "tables")
    show_tables
    exit
    ;;
    
  *)
    generate
    ;;    
esac

# Clean files
# ==============================================================================
rm -rf "/tmp/adicli/$pid"