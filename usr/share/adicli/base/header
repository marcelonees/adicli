#!/bin/bash
# ==============================================================================
#
# Author: Marcelo Barreto Nees <marcelo.linux@gmail.com>
#
# ==============================================================================

#
# Usage
#
usage() {
  echo
  echo "Use: $0 -c database.conf -t Table -T Template -M Model -C ClassName [-O tables|templates|examples]"
  echo
}

test() {
cat <<EOF

Config
================================================================================
db............: $db
db_engine.....: $db_engine
db_host.......: $db_host
db_port.......: $db_port
db_admin......: $db_admin
db_password...: $db_password

Optional        Value          Example
================================================================================
db_table......: $db_table
Template......: $TEMPLATE      (Look in /usr/share/adicli/framework/templates)
Model.........: $MODEL         (E.g: For Customer.class.php, use Customer)
Class.........: $CLASS         (E.g: For a Customer's Form, use CustomerForm)
Author........: $AUTHOR
Parent Class..: $PARENT_CLASS  (TPage, TStandardList etc..)
Option........: $option        ("show tables"|"show templates")
Strategy......: $STRATEGY      (max|serial)
================================================================================

EOF
}


#
# Command Line Options
#
while getopts :S:M:A:P:c:C:t:T:O: opt "${MY_OWN_SET[@]}"; do
  case $opt in
    S)
      STRATEGY=$OPTARG
      ;;
    M)
      MODEL=$OPTARG
      ;;      
    A)
      AUTHOR=$OPTARG
      ;;
    P)
      PARENT_CLASS=$OPTARG
      ;;
    c)
      conf_file=$OPTARG
      ;;
    T)
      TEMPLATE=$OPTARG
      ;;
    C)
      CLASS=$OPTARG
      ;;
    O)
      option=$(echo "$OPTARG"|tr '[:upper:]' '[:lower:]')
      case $option in
        "tables"|"templates"|"examples")
        ;;
        *)
          echo "$0: Error - Invalid option ($OPTARG)"
          exit 3
        ;;
      esac
      ;;
    t)
      db_table="$OPTARG"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 2
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac

done


# No parameters received
# ==============================================================================
if [ "X$1" == "X" ] ; then

  usage
  exit

fi

# List tables
# ==============================================================================
if [ "X$option" != "X" ] ; then

  echo

else

  if [ -z "$conf_file" ] || [ ! -f "$conf_file" ]; then

    echo "$0: Error - Invalid database config file"
    #exit 2

  else

    source "$conf_file"

  fi

  #
  # Verifica se todos os parametros foram passados
  #
  if  [ -z "$db" ]            || \
      [ -z "$db_host" ]       || \
      [ -z "$db_engine" ]     || \
      [ -z "$db_port" ]       || \
      [ -z "$db_admin" ]      || \
      [ -z "$db_password" ]   || \
      [ -z "$db_table" ]      || \
      [ -z "$MODEL" ]         || \
      [ -z "$TEMPLATE" ]      || \
      [ -z "$CLASS" ] ; then

    usage
    exit

  fi

fi


#
# Export some vars
#
DATABASE=$(basename "$conf_file"|sed -e 's/.conf$//g')
EDIT_ACTION=${CLASS//List/Form}
TABLENAME=$db_table
ACTIVE_RECORD=$MODEL

export DATABASE
export MODEL
export ACTIVE_RECORD
export EDIT_ACTION
export TABLENAME
export conf_file